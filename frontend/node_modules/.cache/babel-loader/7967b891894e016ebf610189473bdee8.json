{"ast":null,"code":"var _jsxFileName = \"/Users/dineshsonachalam/Desktop/updated-minimal-jwt/frontend/src/components/ResponsiveAntMenu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { number, string, func, oneOfType, bool, oneOf } from 'prop-types';\nimport { Popover } from 'antd';\nimport throttle from 'lodash.throttle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResponsiveAntMenu = props => {\n  _s();\n\n  const {\n    children: MenuMarkup,\n    activeLinkKey,\n    menuClassName: className,\n    theme,\n    mode,\n    mobileMenuContent,\n    placement,\n    popoverTrigger,\n    mobileBreakPoint,\n    closeOnClick\n  } = props;\n  const [viewportWidth, setViewportWidth] = useState(0);\n  const [isMenuShown, setIsMenuShown] = useState(false);\n\n  const isMobile = () => viewportWidth < mobileBreakPoint;\n\n  const onLinkClick = () => () => isMobile() && closeOnClick ? setIsMenuShown(false) : null;\n\n  useEffect(() => {\n    setViewportWidth(window.innerWidth);\n    const throttledSetViewPortWidth = throttle(() => setViewportWidth(window.innerWidth));\n    window.addEventListener('resize', throttledSetViewPortWidth);\n    return () => window.removeEventListener('resize', throttledSetViewPortWidth);\n  }, []);\n  const MenuMarkupConfig = {\n    theme: !theme ? 'dark' : typeof theme === 'function' ? theme(isMobile()) : theme,\n    mode: !mode ? 'horizontal' : typeof mode === 'function' ? mode(isMobile()) : mode,\n    selectedKeys: [`${activeLinkKey}`],\n    className\n  };\n  const menuToRender = /*#__PURE__*/React.cloneElement(MenuMarkup(onLinkClick()), MenuMarkupConfig);\n  return isMobile() ? /*#__PURE__*/_jsxDEV(Popover, {\n    content: menuToRender,\n    trigger: popoverTrigger,\n    placement: placement,\n    visible: isMenuShown,\n    onVisibleChange: setIsMenuShown,\n    children: mobileMenuContent(isMenuShown)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this) : menuToRender;\n};\n\n_s(ResponsiveAntMenu, \"S+5gpgnAi1fIn+/ZeWGeECditZg=\");\n\n_c = ResponsiveAntMenu;\nResponsiveAntMenu.propTypes = {\n  children: func.isRequired,\n  mobileBreakPoint: number,\n  closeOnMobileLinkClick: bool,\n  activeLinkKey: string,\n  placement: string,\n  theme: func,\n  mode: oneOfType([func, string]),\n  mobileMenuContent: func.isRequired,\n  menuClassName: string,\n  popoverTrigger: oneOf(['click', 'hover', 'focus'])\n};\nResponsiveAntMenu.defaultProps = {\n  mobileBreakPoint: 575,\n  placement: 'bottom',\n  closeOnClick: true,\n  popoverTrigger: 'click'\n};\nexport default ResponsiveAntMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResponsiveAntMenu\");","map":{"version":3,"sources":["/Users/dineshsonachalam/Desktop/updated-minimal-jwt/frontend/src/components/ResponsiveAntMenu.js"],"names":["React","useEffect","useState","number","string","func","oneOfType","bool","oneOf","Popover","throttle","ResponsiveAntMenu","props","children","MenuMarkup","activeLinkKey","menuClassName","className","theme","mode","mobileMenuContent","placement","popoverTrigger","mobileBreakPoint","closeOnClick","viewportWidth","setViewportWidth","isMenuShown","setIsMenuShown","isMobile","onLinkClick","window","innerWidth","throttledSetViewPortWidth","addEventListener","removeEventListener","MenuMarkupConfig","selectedKeys","menuToRender","cloneElement","propTypes","isRequired","closeOnMobileLinkClick","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { number, string, func, oneOfType, bool, oneOf } from 'prop-types';\nimport { Popover } from 'antd';\nimport throttle from 'lodash.throttle';\n\nconst ResponsiveAntMenu = (props) => {\n    const {\n        children: MenuMarkup, activeLinkKey, menuClassName: className,\n        theme, mode, mobileMenuContent, placement, popoverTrigger,\n        mobileBreakPoint, closeOnClick\n    } = props;\n\n    const [viewportWidth, setViewportWidth] = useState(0);\n    const [isMenuShown, setIsMenuShown] = useState(false);\n    const isMobile = () => viewportWidth < mobileBreakPoint;\n    const onLinkClick = () => () => isMobile() && closeOnClick ? setIsMenuShown(false) : null;\n\n    useEffect(() => {\n        setViewportWidth(window.innerWidth);\n        const throttledSetViewPortWidth = throttle(() => setViewportWidth(window.innerWidth));\n        window.addEventListener('resize', throttledSetViewPortWidth);\n\n        return () => window.removeEventListener('resize', throttledSetViewPortWidth);\n    }, []);\n\n    const MenuMarkupConfig = {\n        theme: !theme ? 'dark' : typeof theme === 'function' ? theme(isMobile()) : theme,\n        mode: !mode ? 'horizontal' : typeof mode === 'function' ? mode(isMobile()) : mode,\n        selectedKeys: [`${activeLinkKey}`],\n        className,\n    };\n\n    const menuToRender = React.cloneElement(MenuMarkup(onLinkClick()), MenuMarkupConfig);\n\n    return isMobile() ?\n        <Popover\n            content={menuToRender}\n            trigger={popoverTrigger}\n            placement={placement}\n            visible={isMenuShown}\n            onVisibleChange={setIsMenuShown}\n        >\n            {mobileMenuContent(isMenuShown)}\n        </Popover> : menuToRender;\n};\n\nResponsiveAntMenu.propTypes = {\n    children: func.isRequired,\n    mobileBreakPoint: number,\n    closeOnMobileLinkClick: bool,\n    activeLinkKey: string,\n    placement: string,\n    theme: func,\n    mode: oneOfType([\n        func,\n        string\n    ]),\n    mobileMenuContent: func.isRequired,\n    menuClassName: string,\n    popoverTrigger: oneOf(['click', 'hover', 'focus'])\n};\n\nResponsiveAntMenu.defaultProps = {\n    mobileBreakPoint: 575,\n    placement: 'bottom',\n    closeOnClick: true,\n    popoverTrigger: 'click',\n};\n\nexport default ResponsiveAntMenu;"]},"metadata":{},"sourceType":"module"}