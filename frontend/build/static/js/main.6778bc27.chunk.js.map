{"version":3,"sources":["redux/actionTypes.js","redux/reducers/anyJsonReducer.js","redux/reducers/index.js","redux/store.js","components/NavBar/ResponsiveAntMenu.js","components/NavBar/index.js","components/UploadGist/index.js","redux/actions.js","components/Footer/index.js","pages/Login.js","components/GistTable/index.js","pages/Dashboard.js","App.js","index.js"],"names":["UPDATE_IS_LOGGED_IN_STATUS","UPDATE_USER_ID","UPDATE_USERNAME","UPDATE_GISTS","ADD_GIST","initialState","isLoggedInStatus","userId","username","gists","anyJsonReducer","state","actions","type","payload","gist","combineReducers","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ResponsiveAntMenu","props","MenuMarkup","children","activeLinkKey","className","menuClassName","theme","mode","mobileMenuContent","placement","popoverTrigger","mobileBreakPoint","closeOnClick","useState","viewportWidth","setViewportWidth","isMenuShown","setIsMenuShown","isMobile","useEffect","innerWidth","throttledSetViewPortWidth","throttle","addEventListener","removeEventListener","MenuMarkupConfig","selectedKeys","menuToRender","React","cloneElement","content","trigger","visible","onVisibleChange","defaultProps","cookies","Cookies","NavBar","LogoutClickEvent","e","preventDefault","remove","location","this","Item","style","float","href","onClick","GithubClientURL","process","GithubOutlined","onLinkClick","AuthButton","Component","connect","dispatch","UploadGist","fileList","uploading","handleUpload","formData","FormData","forEach","file","append","name","setState","gistUrl","jwtToken","get","set","reqwest","url","method","headers","processData","data","success","resp","gist_id","Headers","fetch","redirect","then","response","json","result","addGist","gistData","catch","error","console","log","message","onRemove","index","indexOf","newFileList","slice","splice","beforeUpload","title","icon","UploadOutlined","disabled","length","loading","marginTop","Footer","Layout","PageFooter","position","bottom","color","width","textAlign","rel","target","Date","getFullYear","Content","Login","redirectURL","jwt_decode","to","padding","LoginPage","GistTable","handleDelete","key","dataSource","updateGists","filter","item","requestOptions","a","getData","columns","dataIndex","render","text","row","_","record","onConfirm","bordered","Dashboard","decodedJwtToken","updateIsLoggedInStatus","updateUserId","updateUsername","DashboardPage","user_id","App","path","exact","component","rootElement","document","getElementById","ReactDOM","store"],"mappings":"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","file":"static/js/main.6778bc27.chunk.js","sourcesContent":["// Step 1: Create Action Types\nexport const UPDATE_IS_LOGGED_IN_STATUS = \"UPDATE_IS_LOGGED_IN_STATUS\";\nexport const UPDATE_USER_ID = \"UPDATE_USER_ID\";\nexport const UPDATE_USERNAME = \"UPDATE_USERNAME\";\nexport const UPDATE_GISTS = \"UPDATE_GISTS\";\nexport const ADD_GIST = \"ADD_GIST\";","// Step 3: Create reducers for the action types\nimport {UPDATE_IS_LOGGED_IN_STATUS, UPDATE_USER_ID, UPDATE_USERNAME, UPDATE_GISTS, ADD_GIST} from \"../actionTypes\";\n\nconst initialState = {\n    isLoggedInStatus: false,\n    userId : \"\",\n    username: \"\",\n    gists: []\n};\n\nconst anyJsonReducer = (state=initialState, actions) => {\n    switch(actions.type) {\n        case UPDATE_IS_LOGGED_IN_STATUS:\n            return {...state, isLoggedInStatus: actions.payload.isLoggedInStatus}\n        case UPDATE_USER_ID:\n            return {...state, userId: actions.payload.userId}\n        case UPDATE_USERNAME:\n            return {...state, username: actions.payload.username}\n        case UPDATE_GISTS:\n            return {...state, gists: [...actions.payload.gists]}\n        case ADD_GIST:\n            let gist = actions.payload.gist\n            let gists = state.gists\n            return {...state, gists: [gist, ...gists]}\n        default:\n            return {...state}\n    }\n}\n\nexport default anyJsonReducer;\n\n\n\n","// Step 3: Create reducers for the action types\n\nimport { combineReducers } from \"redux\";\n\nimport anyJsonReducer from \"./anyJsonReducer\";\n\nexport default combineReducers({ anyJsonReducer });","// Step 4: Add all the reducers to the redux store.\n\nimport { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\n\nexport default createStore(rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());","import React, { useEffect, useState } from 'react';\nimport { number, string, func, oneOfType, bool, oneOf } from 'prop-types';\nimport { Popover } from 'antd';\nimport throttle from 'lodash.throttle';\n\nconst ResponsiveAntMenu = (props) => {\n    const {\n        children: MenuMarkup, activeLinkKey, menuClassName: className,\n        theme, mode, mobileMenuContent, placement, popoverTrigger,\n        mobileBreakPoint, closeOnClick\n    } = props;\n\n    const [viewportWidth, setViewportWidth] = useState(0);\n    const [isMenuShown, setIsMenuShown] = useState(false);\n    const isMobile = () => viewportWidth < mobileBreakPoint;\n    const onLinkClick = () => () => isMobile() && closeOnClick ? setIsMenuShown(false) : null;\n\n    useEffect(() => {\n        setViewportWidth(window.innerWidth);\n        const throttledSetViewPortWidth = throttle(() => setViewportWidth(window.innerWidth));\n        window.addEventListener('resize', throttledSetViewPortWidth);\n\n        return () => window.removeEventListener('resize', throttledSetViewPortWidth);\n    }, []);\n\n    const MenuMarkupConfig = {\n        theme: !theme ? 'dark' : typeof theme === 'function' ? theme(isMobile()) : theme,\n        mode: !mode ? 'horizontal' : typeof mode === 'function' ? mode(isMobile()) : mode,\n        selectedKeys: [`${activeLinkKey}`],\n        className,\n    };\n\n    const menuToRender = React.cloneElement(MenuMarkup(onLinkClick()), MenuMarkupConfig);\n\n    return isMobile() ?\n        <Popover\n            content={menuToRender}\n            trigger={popoverTrigger}\n            placement={placement}\n            visible={isMenuShown}\n            onVisibleChange={setIsMenuShown}\n        >\n            {mobileMenuContent(isMenuShown)}\n        </Popover> : menuToRender;\n};\n\nResponsiveAntMenu.propTypes = {\n    children: func.isRequired,\n    mobileBreakPoint: number,\n    closeOnMobileLinkClick: bool,\n    activeLinkKey: string,\n    placement: string,\n    theme: func,\n    mode: oneOfType([\n        func,\n        string\n    ]),\n    mobileMenuContent: func.isRequired,\n    menuClassName: string,\n    popoverTrigger: oneOf(['click', 'hover', 'focus'])\n};\n\nResponsiveAntMenu.defaultProps = {\n    mobileBreakPoint: 575,\n    placement: 'bottom',\n    closeOnClick: true,\n    popoverTrigger: 'click',\n};\n\nexport default ResponsiveAntMenu;","import React from 'react';\nimport ResponsiveAntMenu from './ResponsiveAntMenu'\nimport { Menu } from 'antd';\nimport { \n    GithubOutlined,\n} from '@ant-design/icons';\nimport { connect } from 'react-redux';\nimport Cookies from 'universal-cookie';\nconst cookies = new Cookies();\n\nclass NavBar extends React.Component {\n  LogoutClickEvent = (e) => {\n    e.preventDefault();\n    cookies.remove('token');\n    window.location = \"/\";\n  };\n\n  AuthButton() {\n    if(this.props.isLoggedInStatus){\n      return (\n        <Menu.Item style={{float: 'right'}} key='/logout' className={'menu-home'}>\n          {// eslint-disable-next-line\n          }<a href=\"#\" onClick={this.LogoutClickEvent}>Logout</a>\n        </Menu.Item>   \n      );\n\n    }else {\n      let GithubClientURL = `https://github.com/login/oauth/authorize?client_id=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}&redirect_uri=${process.env.REACT_APP_API_ENDPOINT}/oauth/redirect`;\n      /* eslint-disable */\n      return (\n        <Menu.Item style={{float: 'right'}} key='/oauth/authorize' className={'menu-home'}>\n          <a href={GithubClientURL}>Login with github  <GithubOutlined /></a>\n        </Menu.Item>\n      );\n    }\n  }\n  render(){\n    return (\n                <ResponsiveAntMenu\n                    mobileMenuContent={isMenuShown => isMenuShown ? <button>Close</button> : <button>Open</button>}\n                    menuClassName={'responsive-ant-menu'}\n                >\n                    {(onLinkClick) =>          \n                        <Menu theme='dark'>\n                            <Menu.Item key='/' className={'menu-home'}>\n                                <a onClick={onLinkClick} href={'/'}>GoAnyJSON</a>\n                            </Menu.Item>\n                            {this.AuthButton()}\n                        </Menu>                    \n                    }\n                </ResponsiveAntMenu>\n    );\n  }\n}\n\n// https://stackoverflow.com/a/50225424\nconst mapStateToProps = (state) => {\n  return state.anyJsonReducer;\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\n\n\n\n","import { Upload, Button, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { addGist } from \"./../../redux/actions\";\nimport { connect } from 'react-redux';\nimport React from 'react';\nimport { PageHeader} from 'antd';\nimport reqwest from 'reqwest';\nimport Cookies from 'universal-cookie';\nconst cookies = new Cookies();\n\n\nclass UploadGist extends React.Component {\n  state = {\n    fileList: [],\n    uploading: false,\n  };\n\n  handleUpload = () => {\n    const { fileList } = this.state;\n    const formData = new FormData();\n    fileList.forEach(file => {\n      formData.append(\"uploadfile\", file, file.name);\n    });\n\n    this.setState({\n      uploading: true,\n    });\n\n    // You can use any AJAX library you like\n    let gistUrl = `${process.env.REACT_APP_API_ENDPOINT}/gists`\n    let jwtToken = cookies.get('token')\n    cookies.set('token', jwtToken)\n\n    reqwest({\n      url: gistUrl,\n      method: 'post',\n      headers: {\n        'Authorization': `Bearer ${jwtToken}`\n      },      \n      processData: false,\n      data: formData,\n      success: (resp) => {\n        let gist_id = resp.gist_id\n        let url = `${process.env.REACT_APP_API_ENDPOINT}/gists/${gist_id}`\n        let headers = new Headers();\n        headers.append(\"Authorization\", `Bearer ${jwtToken}`) \n        let requestOptions = {\n            method: 'GET',\n            headers: headers,\n            redirect: 'follow'\n        }; \n        fetch(url, requestOptions)\n          .then(response => response.json())\n          .then(result => this.props.addGist(result.gistData))\n          .catch(error => console.log('error', error));\n        this.setState({\n          fileList: [],\n          uploading: false,\n        });\n        message.success(resp.message);\n      },\n      error: () => {\n        this.setState({\n          uploading: false,\n        });\n        message.error('Conversion failed');\n      },\n    });\n  };\n\n  render() {\n    const { uploading, fileList } = this.state;\n    const props = {\n      onRemove: file => {\n        this.setState(state => {\n          const index = state.fileList.indexOf(file);\n          const newFileList = state.fileList.slice();\n          newFileList.splice(index, 1);\n          return {\n            fileList: newFileList,\n          };\n        });\n      },\n      beforeUpload: file => {\n        if(this.state.fileList<2){\n          this.setState(state => ({\n            fileList: [...state.fileList, file],\n          }));\n        }\n\n\n        return false;\n      },\n      fileList,\n    };\n\n    return (\n      <PageHeader\n      title=\"Convert YAML/TOML/CSV/EXCEL to JSON and upload to Gist\"\n              >\n        <Upload {...props}>\n          <Button icon={<UploadOutlined />}>Select File</Button>\n        </Upload>\n        <Button\n          type=\"primary\"\n          onClick={this.handleUpload}\n          disabled={fileList.length === 0 || this.props.isLoggedInStatus === false}\n          loading={uploading}\n          style={{ marginTop: 16 }}\n        >\n          {uploading ? 'Uploading' : 'Start conversion'}\n        </Button>\n      </PageHeader>\n    );\n  }\n}\n\n// https://stackoverflow.com/a/50225424\nconst mapStateToProps = (state) => {\n  return state.anyJsonReducer;\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addGist: (gist) => dispatch(addGist(gist)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadGist);\n\n","// Step 2: Create Actions for your Action Types\n\nimport {UPDATE_IS_LOGGED_IN_STATUS, UPDATE_USER_ID, UPDATE_USERNAME, UPDATE_GISTS, ADD_GIST} from './actionTypes';\n\nexport const updateIsLoggedInStatus = (isLoggedInStatus) => {\n  return {\n            type: UPDATE_IS_LOGGED_IN_STATUS,\n            payload: {\n              isLoggedInStatus: isLoggedInStatus\n            }\n  }\n}\n\nexport const updateUserId = (userId) => {\n    return {\n              type: UPDATE_USER_ID,\n              payload: {\n                userId: userId\n              }\n    }\n}\n\nexport const updateUsername = (username) => {\n  return {\n            type: UPDATE_USERNAME,\n            payload: {\n              username: username\n            }\n  }\n}\n\nexport const updateGists = (gists) => {\n  return {\n            type: UPDATE_GISTS,\n            payload: {\n              gists: gists\n            }\n  }\n}\n\nexport const addGist = (gist) => {\n  return {\n            type: ADD_GIST,\n            payload: {\n              gist: gist\n            }\n  }\n}\n\n","import { connect } from 'react-redux';\nimport React from 'react';\nimport { Layout } from 'antd';\nconst { Footer } = Layout;\n\n\nclass PageFooter extends React.Component {\n  render(){\n    return (\n        <div  style={ (this.props.isLoggedInStatus) ? {}: { position:\"absolute\", bottom:0, color: \"blue\", width:\"100%\"  } }>\n            <Footer style={{ textAlign: 'center' }}> Developed with ❤️ by <a href=\"https://github.com/dineshsonachalam/GoAnyJSON\" rel=\"noreferrer\" target=\"_blank\">Dinesh Sonachalam</a> © {(new Date().getFullYear())}</Footer>\n        </div>\n    );\n  }\n} \n// https://stackoverflow.com/a/50225424\nconst mapStateToProps = (state) => {\n  return state.anyJsonReducer;\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PageFooter);\n\n","import Cookies from 'universal-cookie';\nimport jwt_decode from \"jwt-decode\";\nimport { Redirect } from \"react-router\"\nimport React from 'react';\nimport NavBar from \"../components/NavBar\"\nimport UploadGist from \"../components/UploadGist\"\nimport PageFooter from \"../components/Footer\"\nimport { connect } from 'react-redux';\nimport { Layout} from 'antd';\nconst { Content } = Layout;\n\nconst cookies = new Cookies();\n\nclass Login extends React.Component {\n  LoginPage(jwtToken){\n    if(!jwtToken){\n      return(\n          <div>\n            <NavBar />  \n            <Content>\n                <div style={{ padding: 24}}>\n                  <UploadGist />\n                </div>\n            </Content>\n            <PageFooter/>\n          </div>\n      );\n    }else{\n      let decodedJwtToken = jwt_decode(jwtToken);\n      const redirectURL = \"/\"+decodedJwtToken.username;\n      return(<Redirect to={redirectURL} />);\n    }\n  }\n  render(){\n    return (\n      <div>\n        {this.LoginPage(cookies.get('token'))}\n      </div>\n    );\n  }\n}\n\n// https://stackoverflow.com/a/50225424\nconst mapStateToProps = (state) => {\n  return state.anyJsonReducer;\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import Cookies from 'universal-cookie';\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Table, Popconfirm} from 'antd';\nimport { updateGists } from \"./../../redux/actions\";\nimport { connect } from 'react-redux';\nconst cookies = new Cookies();\n\nclass GistTable extends React.Component {\n    async getData(url, requestOptions) {\n        const response = await fetch(url,requestOptions);\n        return response.json(); \n    }\n\n    async componentDidMount(){\n        let url = `${process.env.REACT_APP_API_ENDPOINT}/gists`\n        let jwtToken = cookies.get('token')\n        let headers = new Headers();\n        headers.append(\"Authorization\", `Bearer ${jwtToken}`) \n        let requestOptions = {\n            method: 'GET',\n            headers: headers,\n            redirect: 'follow'\n        };\n        let gistData = await this.getData(url, requestOptions)\n        this.props.updateGists(gistData[\"gistData\"])\n    }\n\n    handleDelete = (key) => {\n        const dataSource = this.props.gists;\n        let url = `${process.env.REACT_APP_API_ENDPOINT}/gists/${key}`\n        let jwtToken = cookies.get('token')\n        let headers = new Headers();\n        headers.append(\"Authorization\", `Bearer ${jwtToken}`) \n        let requestOptions = {\n            method: 'DELETE',\n            headers: headers,\n            redirect: 'follow'\n        };\n        fetch(url, requestOptions)\n            .then(response => response.json())\n            .then(result => console.log(\"Key: ,Result: \",key, result))\n            .catch(error => console.log('error', error));\n        \n        this.props.updateGists(dataSource.filter((item) => item.key !== key))\n    };\n\n    render(){\n        const  dataSource  = this.props.gists;\n        let columns = [\n            {\n              title: 'Filename',\n              dataIndex: 'filename',\n            },\n            {\n              title: 'Generated from',\n              dataIndex: 'generated_from',\n            },\n            {\n              title: 'URL',\n              dataIndex: 'url',\n              render: (text, row, index) => {\n                return <a href={text} target=\"_blank\" rel=\"noreferrer\">{text}</a>;\n              },\n            },\n            {\n              title: 'Created at',\n              dataIndex: 'created_at',\n            },\n            {\n              title: 'Operation',\n              dataIndex: 'operation',\n              render: (_, record) =>\n              this.props.gists.length >= 1 ? (\n                  <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDelete(record.key)}>\n                    {// eslint-disable-next-line\n                    }<a>Delete</a>\n                  </Popconfirm>\n                ) : null,\n            },\n        ];\n        return (\n            <div key={this.props.gists.length + 1}>\n                <Table\n                        key={this.props.gists.length}\n                        bordered\n                        dataSource={dataSource}\n                        columns={columns}\n                />\n            </div>\n        );\n    }\n} \n// https://stackoverflow.com/a/50225424\nconst mapStateToProps = (state) => {\n  return state.anyJsonReducer;\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateGists: (gists) => dispatch(updateGists(gists)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GistTable);\n\n","import { Redirect } from \"react-router\"\nimport React from 'react';\nimport NavBar from \"../components/NavBar\"\nimport UploadGist from \"../components/UploadGist\"\nimport PageFooter from \"../components/Footer\"\nimport GistTable from \"../components/GistTable\"\nimport { Layout} from 'antd';\nimport Cookies from 'universal-cookie';\nimport { updateIsLoggedInStatus, updateUserId, updateUsername } from \"./../redux/actions\";\nimport { connect } from 'react-redux';\nimport jwt_decode from \"jwt-decode\";\nconst cookies = new Cookies();\nconst { Content } = Layout;\n\nclass Dashboard extends React.Component {\n  DashboardPage(jwtToken){\n    if(!jwtToken){\n      return(<Redirect to=\"/\" />);\n    }else{\n      let decodedJwtToken = jwt_decode(jwtToken);\n      this.props.updateIsLoggedInStatus(true)\n      this.props.updateUserId(decodedJwtToken.userId)\n      this.props.updateUsername(decodedJwtToken.username)\n      return (\n        <div>\n            <NavBar />  \n            <Content>\n                <div style={{ padding: 24}}>\n                  <UploadGist />\n                </div>\n                <div style={{ padding: 24}}>\n                  {this.props.isLoggedInStatus &&\n                    <GistTable />\n                  }\n                </div>\n            </Content>\n            <PageFooter/>\n        </div>\n      );\n    }\n  } \n  render(){\n    return (\n        <div>\n          {this.DashboardPage(cookies.get('token'))}\n        </div>\n    );\n  }\n}\n\n// https://stackoverflow.com/a/50225424\nconst mapStateToProps = (state) => {\n  return state.anyJsonReducer;\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateIsLoggedInStatus: (isLoggedInStatus) => dispatch(updateIsLoggedInStatus(isLoggedInStatus)),\n    updateUserId: (user_id) => dispatch(updateUserId(user_id)),\n    updateUsername: (username) => dispatch(updateUsername(username)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n\n","import React from \"react\";\nimport Login from \"./pages/Login\"\nimport Dashboard from \"./pages/Dashboard\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/\" exact component={Login}/>\n          <Route path=\"/:username\" exact component={Dashboard}/>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'antd/dist/antd.css'\nimport { Provider } from \"react-redux\";\n// Step 5: Add the redux store to the React App\nimport store from \"./redux/store\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n);"],"sourceRoot":""}